///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.Auswertung.Abrechnungen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Abrechnung_validiern recording.
    /// </summary>
    [TestModule("37e41eef-faf3-4d93-a8e5-5adeefb7f5a4", ModuleType.Recording, 1)]
    public partial class Abrechnung_validiern : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static Abrechnung_validiern instance = new Abrechnung_validiern();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Abrechnung_validiern()
        {
            Automatennummer = "999000";
            Abrechnungsnummer = "10018";
            stoerbetrag = "2,40";
            umsatzGesamt = "5,00";
            prodPreis = "2,60";
            summeVerkaeufe = "2,60";
            VerkaufsZeitraum = "";
            AnzahlVerkaeufe = "3";
            UmsatzGiro = "0,00 €";
            UmsatzKredit = "0,00 €";
            UmsatzBar = "5,00";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Abrechnung_validiern Instance
        {
            get { return instance; }
        }

#region Variables

        string _Automatennummer;

        /// <summary>
        /// Gets or sets the value of variable Automatennummer.
        /// </summary>
        [TestVariable("7ef62abc-26d4-4e08-b013-9bcffcea2818")]
        public string Automatennummer
        {
            get { return _Automatennummer; }
            set { _Automatennummer = value; }
        }

        string _Abrechnungsnummer;

        /// <summary>
        /// Gets or sets the value of variable Abrechnungsnummer.
        /// </summary>
        [TestVariable("b99eb4d4-ddad-4cb4-98c7-cac613802c46")]
        public string Abrechnungsnummer
        {
            get { return _Abrechnungsnummer; }
            set { _Abrechnungsnummer = value; }
        }

        string _stoerbetrag;

        /// <summary>
        /// Gets or sets the value of variable stoerbetrag.
        /// </summary>
        [TestVariable("f5ace19c-003a-4ebb-b202-c38cea9814ab")]
        public string stoerbetrag
        {
            get { return _stoerbetrag; }
            set { _stoerbetrag = value; }
        }

        string _umsatzGesamt;

        /// <summary>
        /// Gets or sets the value of variable umsatzGesamt.
        /// </summary>
        [TestVariable("c0a6129f-59bb-49fd-bfee-597ded06c94a")]
        public string umsatzGesamt
        {
            get { return _umsatzGesamt; }
            set { _umsatzGesamt = value; }
        }

        string _prodPreis;

        /// <summary>
        /// Gets or sets the value of variable prodPreis.
        /// </summary>
        [TestVariable("ec6f3637-0fdb-4d34-a93d-aa55907821ef")]
        public string prodPreis
        {
            get { return _prodPreis; }
            set { _prodPreis = value; }
        }

        string _summeVerkaeufe;

        /// <summary>
        /// Gets or sets the value of variable summeVerkaeufe.
        /// </summary>
        [TestVariable("b9bcfffc-3505-4ced-8a83-3a27f78338f3")]
        public string summeVerkaeufe
        {
            get { return _summeVerkaeufe; }
            set { _summeVerkaeufe = value; }
        }

        string _VerkaufsZeitraum;

        /// <summary>
        /// Gets or sets the value of variable VerkaufsZeitraum.
        /// </summary>
        [TestVariable("2c88b327-bff4-4ef2-a599-5f0d177948f9")]
        public string VerkaufsZeitraum
        {
            get { return _VerkaufsZeitraum; }
            set { _VerkaufsZeitraum = value; }
        }

        string _AnzahlVerkaeufe;

        /// <summary>
        /// Gets or sets the value of variable AnzahlVerkaeufe.
        /// </summary>
        [TestVariable("cd273e81-e05f-44a3-bf3f-4200a6da5fb2")]
        public string AnzahlVerkaeufe
        {
            get { return _AnzahlVerkaeufe; }
            set { _AnzahlVerkaeufe = value; }
        }

        string _UmsatzGiro;

        /// <summary>
        /// Gets or sets the value of variable UmsatzGiro.
        /// </summary>
        [TestVariable("f381b351-a2bc-4310-ba16-bc4d5362c2ed")]
        public string UmsatzGiro
        {
            get { return _UmsatzGiro; }
            set { _UmsatzGiro = value; }
        }

        string _UmsatzKredit;

        /// <summary>
        /// Gets or sets the value of variable UmsatzKredit.
        /// </summary>
        [TestVariable("1189c2a9-ff5d-4291-a807-8c6b69965e2b")]
        public string UmsatzKredit
        {
            get { return _UmsatzKredit; }
            set { _UmsatzKredit = value; }
        }

        string _UmsatzBar;

        /// <summary>
        /// Gets or sets the value of variable UmsatzBar.
        /// </summary>
        [TestVariable("062014b8-256d-46fe-b1ac-299d808bd1d1")]
        public string UmsatzBar
        {
            get { return _UmsatzBar; }
            set { _UmsatzBar = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Menue.Abrechnungen' at Center.", repo.TicketingInside_DImasPlus.Menue.AbrechnungenInfo, new RecordItemIndex(0));
            repo.TicketingInside_DImasPlus.Menue.Abrechnungen.Click();
            Delay.Milliseconds(0);
            
            // Verkaufszeitraum festlegen
            Report.Log(ReportLevel.Info, "Section", "Verkaufszeitraum festlegen", new RecordItemIndex(1));
            
            UserCodeCollections.DPlusLibrary.setTimePeriod(repo.TicketingInside_DImasPlus.PopUps.SelfInfo, repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Verkaufszeitraum.btnKalenderInfo, VerkaufsZeitraum);
            Delay.Milliseconds(0);
            
            // Abrechnungen
            Report.Log(ReportLevel.Info, "Section", "Abrechnungen", new RecordItemIndex(3));
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.TableFilter.filterAutomatenNrInfo, Automatennummer);
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.TableFilter.filterAbrechnungsNrInfo, Abrechnungsnummer);
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(6));
            //Delay.Duration(300, false);
            
            // Prüfe Tabelle
            Report.Log(ReportLevel.Info, "Section", "Prüfe Tabelle", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Automatennummer) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummer'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummerInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummerInfo, "InnerText", Automatennummer);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Abrechnungsnummer) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAbrechnungsnr'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAbrechnungsnrInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAbrechnungsnrInfo, "InnerText", Abrechnungsnummer);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$AnzahlVerkaeufe) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAnzahlVerkaeufe'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAnzahlVerkaeufeInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellAnzahlVerkaeufeInfo, "InnerText", AnzahlVerkaeufe);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$UmsatzBar) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzBar'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzBarInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzBarInfo, "InnerText", UmsatzBar);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$UmsatzGiro) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzGiroCard'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzGiroCardInfo, new RecordItemIndex(12));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzGiroCardInfo, "InnerText", UmsatzGiro);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$UmsatzKredit) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzKreditkarte'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzKreditkarteInfo, new RecordItemIndex(13));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellUmsatzKreditkarteInfo, "InnerText", UmsatzKredit);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummer' at Center.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummerInfo, new RecordItemIndex(14));
            repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Abrechnungen.Table_Overview.cellGeraetenummer.Click();
            Delay.Milliseconds(0);
            
            // VK Kopfwerte
            Report.Log(ReportLevel.Info, "Section", "VK Kopfwerte", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(16));
            Delay.Duration(300, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Automatennummer) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAutomatenNr'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAutomatenNrInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAutomatenNrInfo, "InnerText", Automatennummer);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (innerText=$Abrechnungsnummer) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAbrechnungsNr'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAbrechnungsNrInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelAbrechnungsNrInfo, "innerText", Abrechnungsnummer);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$AnzahlVerkaeufe) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelVerkaeufe'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelVerkaeufeInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelVerkaeufeInfo, "InnerText", AnzahlVerkaeufe);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$stoerbetrag) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelStoerbetrag'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelStoerbetragInfo, new RecordItemIndex(20));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelStoerbetragInfo, "InnerText", stoerbetrag);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$umsatzGesamt) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelGesamtumsatz'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelGesamtumsatzInfo, new RecordItemIndex(21));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Header.LabelGesamtumsatzInfo, "InnerText", umsatzGesamt);
            Delay.Milliseconds(100);
            
            // Tabelle Zeile 1
            Report.Log(ReportLevel.Info, "Section", "Tabelle Zeile 1", new RecordItemIndex(22));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='- - -|Tarif_3') on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellTarif'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellTarifInfo, new RecordItemIndex(23));
            //Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellTarifInfo, "InnerText", "- - -|Tarif_3");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='IDP_GVH_4') on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktkennung'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktkennungInfo, new RecordItemIndex(24));
            //Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktkennungInfo, "InnerText", "IDP_GVH_4");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='9298') on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellArtikelnummer'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellArtikelnummerInfo, new RecordItemIndex(25));
            //Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellArtikelnummerInfo, "InnerText", "9298");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$prodPreis) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktpreis'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktpreisInfo, new RecordItemIndex(26));
            //Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellProduktpreisInfo, "InnerText", prodPreis);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Bar') on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellZahlungsmethode'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellZahlungsmethodeInfo, new RecordItemIndex(27));
            //Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellZahlungsmethodeInfo, "InnerText", "Bar");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='1') on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellAnzahlVerkaeufe'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellAnzahlVerkaeufeInfo, new RecordItemIndex(28));
            //Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellAnzahlVerkaeufeInfo, "InnerText", "1");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$summeVerkaeufe) on item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellSummeVerkaeufe'.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellSummeVerkaeufeInfo, new RecordItemIndex(29));
            //Validate.AttributeContains(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.Table_VKS.cellSummeVerkaeufeInfo, "InnerText", summeVerkaeufe);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.btnBack' at Center.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.btnBackInfo, new RecordItemIndex(30));
            repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.Verkaufsstatistik.btnBack.Click();
            Delay.Milliseconds(0);
            
            // zurück
            Report.Log(ReportLevel.Info, "Section", "zurück", new RecordItemIndex(31));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.btnAbrAbrechnung' at Center.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.btnAbrAbrechnungInfo, new RecordItemIndex(32));
            repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Abrechnungen.btnAbrAbrechnung.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
