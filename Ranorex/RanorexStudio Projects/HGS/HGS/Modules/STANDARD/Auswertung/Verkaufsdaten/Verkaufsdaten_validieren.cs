///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.Auswertung.Verkaufsdaten
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verkaufsdaten_validieren recording.
    /// </summary>
    [TestModule("76fd654a-6b90-4d42-aa54-46b45966e418", ModuleType.Recording, 1)]
    public partial class Verkaufsdaten_validieren : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static Verkaufsdaten_validieren instance = new Verkaufsdaten_validieren();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verkaufsdaten_validieren()
        {
            Verkaufszeitraum = "Dieses Jahr";
            AutomatenNr = "";
            AbrechnungsNr = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verkaufsdaten_validieren Instance
        {
            get { return instance; }
        }

#region Variables

        string _Verkaufszeitraum;

        /// <summary>
        /// Gets or sets the value of variable Verkaufszeitraum.
        /// </summary>
        [TestVariable("1189f0d9-41ec-43b8-84cf-95bab57cf31c")]
        public string Verkaufszeitraum
        {
            get { return _Verkaufszeitraum; }
            set { _Verkaufszeitraum = value; }
        }

        string _AutomatenNr;

        /// <summary>
        /// Gets or sets the value of variable AutomatenNr.
        /// </summary>
        [TestVariable("f9b4d9f6-5d13-4eec-b522-3b14ad876f52")]
        public string AutomatenNr
        {
            get { return _AutomatenNr; }
            set { _AutomatenNr = value; }
        }

        string _AbrechnungsNr;

        /// <summary>
        /// Gets or sets the value of variable AbrechnungsNr.
        /// </summary>
        [TestVariable("ef7e60ec-c5b6-49ae-89ec-4aed5cd3433a")]
        public string AbrechnungsNr
        {
            get { return _AbrechnungsNr; }
            set { _AbrechnungsNr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Menue
            Report.Log(ReportLevel.Info, "Section", "Menue", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Menue.Verkaufsdaten' at 56;10.", repo.TicketingInside_DImasPlus.Menue.VerkaufsdatenInfo, new RecordItemIndex(1));
            repo.TicketingInside_DImasPlus.Menue.Verkaufsdaten.Click("56;10");
            Delay.Milliseconds(0);
            
            // Navigation
            Report.Log(ReportLevel.Info, "Section", "Navigation", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Tabs.Verkaufsdaten' at 49;15.", repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Tabs.VerkaufsdatenInfo, new RecordItemIndex(3));
            repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Tabs.Verkaufsdaten.Click("49;15");
            Delay.Milliseconds(0);
            
            // Verkaufszeitraum
            Report.Log(ReportLevel.Info, "Section", "Verkaufszeitraum", new RecordItemIndex(4));
            
            UserCodeCollections.DPlusLibrary.setTimePeriod(repo.TicketingInside_DImasPlus.PopUps.SelfInfo, repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Verkaufszeitraum.btnKalenderInfo, Verkaufszeitraum);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(6));
            Delay.Duration(500, false);
            
            // Filtern
            Report.Log(ReportLevel.Info, "Section", "Filtern", new RecordItemIndex(7));
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Verkaufsdaten.Tabelle.Filter.FilterGeraeteNrInfo, AutomatenNr);
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Verkaufsdaten.Tabelle.Filter.FilterAbrechnungsNrInfo, AbrechnungsNr);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(10));
            Delay.Duration(500, false);
            
            Validate_Verkaufsdatentable(repo.TicketingInside_DImasPlus.ContentPage.Auswertung.Verkaufsdaten.Verkaufsdaten.Tabelle.Zeile1.SelfInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
