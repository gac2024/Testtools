///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.HauptDisplay
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Anmelden recording.
    /// </summary>
    [TestModule("2a6e74e3-6966-46c4-b32a-95d178d6ddd3", ModuleType.Recording, 1)]
    public partial class Anmelden : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static Anmelden instance = new Anmelden();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Anmelden()
        {
            strVersion = "";
            DPlusUser = "robert.kehnen@ica.de";
            DPlusPasswort = "Bogmcs046892";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Anmelden Instance
        {
            get { return instance; }
        }

#region Variables

        string _strVersion;

        /// <summary>
        /// Gets or sets the value of variable strVersion.
        /// </summary>
        [TestVariable("be77f19c-32e5-4b41-933b-6ac0acb7cd1b")]
        public string strVersion
        {
            get { return _strVersion; }
            set { _strVersion = value; }
        }

        string _DPlusUser;

        /// <summary>
        /// Gets or sets the value of variable DPlusUser.
        /// </summary>
        [TestVariable("c1cc10a7-909c-4c2b-9d2f-ddf5eb297525")]
        public string DPlusUser
        {
            get { return _DPlusUser; }
            set { _DPlusUser = value; }
        }

        string _DPlusPasswort;

        /// <summary>
        /// Gets or sets the value of variable DPlusPasswort.
        /// </summary>
        [TestVariable("6df28083-a269-49d4-aae1-8f35fb271949")]
        public string DPlusPasswort
        {
            get { return _DPlusPasswort; }
            set { _DPlusPasswort = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Anmeldemaske.Email' at 227;25.", repo.TicketingInside_DImasPlus.Anmeldemaske.EmailInfo, new RecordItemIndex(0));
            repo.TicketingInside_DImasPlus.Anmeldemaske.Email.Click("227;25");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DPlusUser' with focus on 'TicketingInside_DImasPlus.Anmeldemaske.Email'.", repo.TicketingInside_DImasPlus.Anmeldemaske.EmailInfo, new RecordItemIndex(1));
            repo.TicketingInside_DImasPlus.Anmeldemaske.Email.PressKeys(DPlusUser);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Anmeldemaske.Password' at 216;18.", repo.TicketingInside_DImasPlus.Anmeldemaske.PasswordInfo, new RecordItemIndex(2));
            repo.TicketingInside_DImasPlus.Anmeldemaske.Password.Click("216;18");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DPlusPasswort' with focus on 'TicketingInside_DImasPlus.Anmeldemaske.Password'.", repo.TicketingInside_DImasPlus.Anmeldemaske.PasswordInfo, new RecordItemIndex(3));
            repo.TicketingInside_DImasPlus.Anmeldemaske.Password.PressKeys(DPlusPasswort);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Anmeldemaske.Anmelden' at 284;21.", repo.TicketingInside_DImasPlus.Anmeldemaske.AnmeldenInfo, new RecordItemIndex(4));
            repo.TicketingInside_DImasPlus.Anmeldemaske.Anmelden.Click("284;21");
            Delay.Milliseconds(0);
            
            // Auslesen der Versionsnummer
            Report.Log(ReportLevel.Info, "Section", "Auslesen der Versionsnummer", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'TicketingInside_DImasPlus.footer'", repo.TicketingInside_DImasPlus.footer.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(6));
            repo.TicketingInside_DImasPlus.footer.SelfInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'innerText' from item 'TicketingInside_DImasPlus.footer.version' and assigning its value to variable 'strVersion'.", repo.TicketingInside_DImasPlus.footer.versionInfo, new RecordItemIndex(7));
            strVersion = repo.TicketingInside_DImasPlus.footer.version.Element.GetAttributeValueText("innerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", strVersion, new RecordItemIndex(8));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
