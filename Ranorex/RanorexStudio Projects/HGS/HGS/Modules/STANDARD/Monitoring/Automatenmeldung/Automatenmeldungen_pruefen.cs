///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.Monitoring.Automatenmeldung
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Automatenmeldungen_pruefen recording.
    /// </summary>
    [TestModule("afcd90ee-1eae-4a41-ae5d-5b2d158923c4", ModuleType.Recording, 1)]
    public partial class Automatenmeldungen_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static Automatenmeldungen_pruefen instance = new Automatenmeldungen_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Automatenmeldungen_pruefen()
        {
            AutomatenNr = "999000";
            NachrichtenTyp = "Schicht";
            Verarbeitungsstatus = "Verarbeitet";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Automatenmeldungen_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _AutomatenNr;

        /// <summary>
        /// Gets or sets the value of variable AutomatenNr.
        /// </summary>
        [TestVariable("a4f5f273-aae8-4e65-8c44-c32708a3047a")]
        public string AutomatenNr
        {
            get { return _AutomatenNr; }
            set { _AutomatenNr = value; }
        }

        string _NachrichtenTyp;

        /// <summary>
        /// Gets or sets the value of variable NachrichtenTyp.
        /// </summary>
        [TestVariable("dd164dce-fcb3-4274-bcfd-ee347f8363f7")]
        public string NachrichtenTyp
        {
            get { return _NachrichtenTyp; }
            set { _NachrichtenTyp = value; }
        }

        string _Verarbeitungsstatus;

        /// <summary>
        /// Gets or sets the value of variable Verarbeitungsstatus.
        /// </summary>
        [TestVariable("d574123d-e2a9-4948-b091-66b37c17ec2e")]
        public string Verarbeitungsstatus
        {
            get { return _Verarbeitungsstatus; }
            set { _Verarbeitungsstatus = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Menue.Automatenmeldungen' at 84;7.", repo.TicketingInside_DImasPlus.Menue.AutomatenmeldungenInfo, new RecordItemIndex(0));
            repo.TicketingInside_DImasPlus.Menue.Automatenmeldungen.Click("84;7");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(1));
            Delay.Duration(500, false);
            
            // Filter
            Report.Log(ReportLevel.Info, "Section", "Filter", new RecordItemIndex(2));
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Filter.filterGeraetenummerInfo, AutomatenNr);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(4));
            Delay.Duration(500, false);
            
            // Validierung
            Report.Log(ReportLevel.Info, "Section", "Validierung", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$AutomatenNr) on item 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellGeraetenummer'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellGeraetenummerInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellGeraetenummerInfo, "InnerText", AutomatenNr);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$NachrichtenTyp) on item 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellNachrichtentyp'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellNachrichtentypInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellNachrichtentypInfo, "InnerText", NachrichtenTyp);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='0.0.0.0') on item 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellIPAdresse'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellIPAdresseInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellIPAdresseInfo, "InnerText", "0.0.0.0");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Verarbeitungsstatus) on item 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.celVerarbeitungsstatus'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.celVerarbeitungsstatusInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.celVerarbeitungsstatusInfo, "InnerText", Verarbeitungsstatus);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Online') on item 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellUebertragungsart'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellUebertragungsartInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatenmeldungen.Tabelle.Zeile1.cellUebertragungsartInfo, "InnerText", "Online");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
