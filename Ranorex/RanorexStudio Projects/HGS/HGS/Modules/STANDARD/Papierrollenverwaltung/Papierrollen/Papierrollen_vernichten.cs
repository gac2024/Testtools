///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.Papierrollenverwaltung.Papierrollen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Papierrollen_vernichten recording.
    /// </summary>
    [TestModule("2b4513f6-09e7-4710-9d97-2dbc317e135c", ModuleType.Recording, 1)]
    public partial class Papierrollen_vernichten : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static Papierrollen_vernichten instance = new Papierrollen_vernichten();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Papierrollen_vernichten()
        {
            Seriennummer = "010001";
            AutomatenNr = "999000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Papierrollen_vernichten Instance
        {
            get { return instance; }
        }

#region Variables

        string _Seriennummer;

        /// <summary>
        /// Gets or sets the value of variable Seriennummer.
        /// </summary>
        [TestVariable("1f865ba5-be41-4106-86a9-616796d02eaf")]
        public string Seriennummer
        {
            get { return _Seriennummer; }
            set { _Seriennummer = value; }
        }

        string _AutomatenNr;

        /// <summary>
        /// Gets or sets the value of variable AutomatenNr.
        /// </summary>
        [TestVariable("27112a8e-5588-413b-9853-30b93408b56c")]
        public string AutomatenNr
        {
            get { return _AutomatenNr; }
            set { _AutomatenNr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // navigation Papierrollen
            Report.Log(ReportLevel.Info, "Section", "navigation Papierrollen", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Menue.Papierrollen' at Center.", repo.TicketingInside_DImasPlus.Menue.PapierrollenInfo, new RecordItemIndex(1));
            repo.TicketingInside_DImasPlus.Menue.Papierrollen.Click();
            Delay.Milliseconds(0);
            
            // Filtern
            Report.Log(ReportLevel.Info, "Section", "Filtern", new RecordItemIndex(2));
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Filter.FilterSeriennummerInfo, Seriennummer);
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Filter.FilterGeraetenummerInfo, AutomatenNr);
            Delay.Milliseconds(0);
            
            // Papierrolle vernichrten
            Report.Log(ReportLevel.Info, "Section", "Papierrolle vernichrten", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.BtnVernichten' at Center.", repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.BtnVernichtenInfo, new RecordItemIndex(6));
            repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.BtnVernichten.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$Seriennummer) on item 'TicketingInside_DImasPlus.PopUps.Achtung.lblNachricht'.", repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, new RecordItemIndex(7));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, "InnerText", Seriennummer);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'Sind Sie sicher, dass sie diese Papierrolle mit der Seriennummer') on item 'TicketingInside_DImasPlus.PopUps.Achtung.lblNachricht'.", repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, new RecordItemIndex(8));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, "InnerText", "Sind Sie sicher, dass sie diese Papierrolle mit der Seriennummer");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>'vernichten möchten?') on item 'TicketingInside_DImasPlus.PopUps.Achtung.lblNachricht'.", repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.TicketingInside_DImasPlus.PopUps.Achtung.lblNachrichtInfo, "InnerText", "vernichten möchten?");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.PopUps.Achtung.Bestaetigen' at Center.", repo.TicketingInside_DImasPlus.PopUps.Achtung.BestaetigenInfo, new RecordItemIndex(10));
            repo.TicketingInside_DImasPlus.PopUps.Achtung.Bestaetigen.Click();
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.PopUps.Achtung.Abbrechen' at Center.", repo.TicketingInside_DImasPlus.PopUps.Achtung.AbbrechenInfo, new RecordItemIndex(11));
            //repo.TicketingInside_DImasPlus.PopUps.Achtung.Abbrechen.Click();
            //Delay.Milliseconds(0);
            
            // Filtern
            Report.Log(ReportLevel.Info, "Section", "Filtern", new RecordItemIndex(12));
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Filter.FilterSeriennummerInfo, Seriennummer);
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.Fill_textfilter(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Filter.FilterGeraetenummerInfo, "");
            Delay.Milliseconds(0);
            
            // Tabellenzeile validieren
            Report.Log(ReportLevel.Info, "Section", "Tabellenzeile validieren", new RecordItemIndex(15));
            
            UserCodeCollections.DPlusLibrary.validateInnertextWithXMLtag(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellBarcodeInfo, "barcode");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Seriennummer) on item 'TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellSeriennummer'.", repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellSeriennummerInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellSeriennummerInfo, "InnerText", Seriennummer);
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.validateInnertextWithXMLtag(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellAktuellerAbschnittInfo, "aktuellerabschnitt");
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.validateInnertextWithXMLtag(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellVerbliebeneAbschnitteInfo, "verbleibendeabschnitte");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='0') on item 'TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellGertaetenummer'.", repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellGertaetenummerInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellGertaetenummerInfo, "InnerText", "0");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Vernichtet') on item 'TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellStatus'.", repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellStatusInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellStatusInfo, "InnerText", "Vernichtet");
            Delay.Milliseconds(0);
            
            UserCodeCollections.DPlusLibrary.validateInnertextWithXMLtag(repo.TicketingInside_DImasPlus.ContentPage.Papierrollenverwaltung.Papierrollen.Tabelle.Zeile1.CellPapierbahnInfo, "baugruppentyp");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
