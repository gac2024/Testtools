///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cottbus_3000CR.Modules.STANDARD.Automatensequenzen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AutomatenSequencen_pruefen recording.
    /// </summary>
    [TestModule("c0c8a669-bfc6-40c1-bbf0-3ef385096c4e", ModuleType.Recording, 1)]
    public partial class AutomatenSequencen_pruefen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cottbus_3000CR.HGS repository.
        /// </summary>
        public static global::Cottbus_3000CR.HGS repo = global::Cottbus_3000CR.HGS.Instance;

        static AutomatenSequencen_pruefen instance = new AutomatenSequencen_pruefen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AutomatenSequencen_pruefen()
        {
            AutomantenNr = "999000";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AutomatenSequencen_pruefen Instance
        {
            get { return instance; }
        }

#region Variables

        string _AutomantenNr;

        /// <summary>
        /// Gets or sets the value of variable AutomantenNr.
        /// </summary>
        [TestVariable("a27081c8-d078-4a49-bd5d-66868ab15501")]
        public string AutomantenNr
        {
            get { return _AutomantenNr; }
            set { _AutomantenNr = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TicketingInside_DImasPlus.Menue.Automatensequenzen' at 108;15.", repo.TicketingInside_DImasPlus.Menue.AutomatensequenzenInfo, new RecordItemIndex(0));
            repo.TicketingInside_DImasPlus.Menue.Automatensequenzen.Click("108;15");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AutomantenNr' with focus on 'TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.Filter.NumberFilterFromDeviceResourceDevice'.", repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.Filter.NumberFilterFromDeviceResourceDeviceInfo, new RecordItemIndex(1));
            //repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.Filter.NumberFilterFromDeviceResourceDevice.PressKeys(AutomantenNr);
            //Delay.Milliseconds(0);
            
            //ValidateSeveralAutomatenSequenze(repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.Filter.NumberFilterFromSequenceNumberInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.TableCellDeviceResourceInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.TableCellSequenceNumberInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.TableCellProcessCategorInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.TableCellDescriptionMuInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.TableCellServiceTechnicInfo, repo.TicketingInside_DImasPlus.ContentPage.Monitoring.Automatensequenzen.AutomatensequenzenTabelle.Filter.removeFilterSequenceNrInfo);
            //Delay.Milliseconds(0);
            
            ValidateAllSequences();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
